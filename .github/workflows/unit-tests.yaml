---
name: Tests

on:
  - push
  - pull_request

jobs:
  test-app:
    name: Unit Tests (App)
    runs-on: ubuntu-latest
    outputs:
      HAS_CC_SECRETS: ${{ steps.check-secrets.outputs.HAS_CC_SECRETS }}
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4   
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Run unit tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov pytest-mock
          pytest app/tests/ --doctest-modules --junitxml=test-results/test-results.xml --cov --cov-report=html:coverage_report
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: api/pytest-results
          path: test-results/test-results.xml
          retention-days: 15
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: api/coverage-report
          path: coverage_report/
          retention-days: 15
  test-frontend:
    name: Unit Tests (Frontend)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    outputs:
      HAS_CC_SECRETS: ${{ steps.check-secrets.outputs.HAS_CC_SECRETS }}
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Check CodeClimate Secrets
        id: check-secrets
        run: |
          echo "HAS_CC_SECRETS=${{ secrets.CC_TEST_REPORTER_ID != '' }}" >> $GITHUB_OUTPUT
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-frontend
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ env.cache-name }}-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-${{ env.cache-name }}-
            ${{ runner.os }}-frontend-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        run: npm run test
        env:
          CI: true
      - name: Save Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend
          path: ${{ github.workspace }}/frontend/coverage
          retention-days: 15
      - name: Monitor Coverage
        uses: slavcodev/coverage-monitor-action@v1
        with:
          comment_mode: update
          comment_footer: false
          comment_context: Coverage Report (Frontend)
          coverage_path: frontend/coverage/clover.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          threshold_alert: 50
          threshold_warning: 80

  test-coverage:
    name: Publish to Code Climate
    needs:
      - test-app
      - test-frontend
    if: needs.test-app.outputs.HAS_CC_SECRETS == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Restore Coverage Results
        uses: actions/download-artifact@v4
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v9
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{ github.workspace }}/**/lcov.info:lcov
          prefix: ${{ github.workplace }}
